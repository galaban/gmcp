<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Thursday, May 28, 2015, 6:17 AM -->
<!-- MuClient version 4.98 -->

<!-- Plugin "Galabans_GMCP_Plugin" generated by Plugin Wizard -->

<muclient>
<plugin
   name="Galabans_GMCP_Plugin"
   author="Galaban"
   id="de3587f8500302db68b53d40"
   language="Lua"
   purpose="To make known what is not seen"
   save_state="y"
   date_written="2015-05-28 06:15:35"
   requires="4.81"
   version="1.0"
   >
<description trim="y">
<![CDATA[
A simple GMCP plugin to show room numbers
]]>
</description>

</plugin>


<!--  Aliases  -->

<aliases>
  <alias
   match="gmcp exits"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>show_gmcp_exits()</send>
  </alias>
</aliases>

<aliases>
  <alias
   match="gmcp"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>gmcp_help()</send>
  </alias>
</aliases>
<aliases>
  <alias
   match="gmcp autoid"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>gmcp_set_autoid()</send>
  </alias>
</aliases>

<aliases>
  <alias
   match="gmcp room"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>show_gmcp_room()</send>
  </alias>
</aliases>

<aliases>
  <alias
   match="gmcp color"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>gmcp_color_help()</send>
  </alias>
</aliases>

<aliases>
  <alias
   match="gmcp color *"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>setup_gmcp_color("%1")</send>
  </alias>
</aliases>


<!--  Script  -->


<script>
<![CDATA[
require "gmcphelper"
-- functions for handling Aardwolf color codes
dofile(GetPluginInfo(GetPluginID(), 20) .. "aardwolf_colors.lua")


function OnPluginBroadcast (msg, id, name, text)
   if id == "3e7dedbe37e44942dd46d264" then -- gmcphandler
      if performing_maintenance == true then
         queue_broadcast(msg, id, name, text)
         return
      end

      if (text == "room.info") then
         blinded = false
         res, gmcparg = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval","room.info")
         luastmt = "gmcpdata = " .. gmcparg
         assert (loadstring (luastmt or "")) ()

         got_gmcp_room()         
      end 

      if (text == "char.status") then
         res, gmcparg = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval","char.status")
         luastmt = "gmcpdata = " .. gmcparg
         assert (loadstring (luastmt or "")) ()
         player_state = tonumber(gmcpdata.state)
      end 

   end --if gmcphandler
end

curr_room = {}
function got_gmcp_room()
    local room_id = gmcpval("num")

    if(b_autoid == true) then
        AnsiNote(c_autocolor.."Room Number: "..room_id)
    end

    curr_room = {
      id = tonumber(room_id),
      name = gmcpval("name"),
      zone = gmcpval("zone"),
      exits = {},
      x = gmcpval("coord.x"),
      y = gmcpval("coord.y"),
      z = 0,
      terrain = gmcpval("terrain"),
      iscontinent = gmcpval("coord.cont")
    }
    curr_room.exits.n = gmcpval("exits.n")
    curr_room.exits.e = gmcpval("exits.e")
    curr_room.exits.s = gmcpval("exits.s")
    curr_room.exits.w = gmcpval("exits.w")
    curr_room.exits.u = gmcpval("exits.u")
    curr_room.exits.d = gmcpval("exits.d")
end

c_grey = ANSI(22)..ANSI(37)
c_blue = ANSI(1)..ANSI(34)
c_white = ANSI(1)..ANSI(37)
c_cyan = ANSI(1)..ANSI(36)
c_dcyan = ANSI(22)..ANSI(36)
c_red = ANSI(1)..ANSI(31)
c_yellow = ANSI(1)..ANSI(33)
c_green = ANSI(1)..ANSI(32)

c_autocolor = c_blue

b_autoid = true
function gmcp_set_autoid()

    if(b_autoid == true) then
        b_autoid = false
        AnsiNote(c_autocolor.."Room ID will no longer be shown")
    else
        b_autoid = true
        AnsiNote(c_autocolor.."Room ID will now be shown")
    end
end

function gmcp_help()
    AnsiNote(c_cyan.."Galaban's GMCP Plugin")
    AnsiNote("")
    AnsiNote(c_grey.."This plugin pulls in the extra data sent to the clieint and allows you to view it.")
    AnsiNote("")
    AnsiNote(c_grey.."Help:")
    AnsiNote(c_yellow.."  gmcp help"..c_grey..":        This screen")
    AnsiNote(c_yellow.."  gmcp color"..c_grey..":       Color options")
    AnsiNote("")
    AnsiNote(c_grey.."Usage:")
    AnsiNote(c_yellow.."  gmcp room"..c_grey..":          Show the GMCP room data.")
    AnsiNote(c_yellow.."  gmcp exits"..c_grey..":         View the standard 'exits' output with room ids")
    AnsiNote("")
    AnsiNote(c_grey.."Setup:")
    AnsiNote(c_yellow.."  gmcp autoid"..c_grey..":        Enable/Disable the room id when viewing the room.")
    AnsiNote(c_yellow.."  gmcp color <color>"..c_grey..": Change the color of the GMCP output.")
    AnsiNote("")
end

function gmcp_color_help()
    AnsiNote(c_grey.."Usage:  gmcp color <color>")
    AnsiNote("")
    AnsiNote(c_grey.."This is used to change the color of the automatic text used for room ids.")
    AnsiNote(c_grey.."This color shows up in the room id and the 'gmcp exits' list.")
    AnsiNote("")
    AnsiNote(c_grey.."Available Colors (with examples):")
    AnsiNote(c_blue..   "  blue   "..c_grey..":     "..c_cyan.." West           "..c_white..":"..c_grey.." The Main Hall   "..c_blue.."(12345)")
    AnsiNote(c_red..    "  red    "..c_grey..":     "..c_cyan.." West           "..c_white..":"..c_grey.." The Main Hall   "..c_red.."(12345)")
    AnsiNote(c_yellow.. "  yellow "..c_grey..":     "..c_cyan.." West           "..c_white..":"..c_grey.." The Main Hall   "..c_yellow.."(12345)")
    AnsiNote(c_cyan..   "  cyan   "..c_grey..":     "..c_cyan.." West           "..c_white..":"..c_grey.." The Main Hall   "..c_cyan.."(12345)")
    AnsiNote(c_green..  "  green  "..c_grey..":     "..c_cyan.." West           "..c_white..":"..c_grey.." The Main Hall   "..c_green.."(12345)")
    AnsiNote(c_white..  "  white  "..c_grey..":     "..c_cyan.." West           "..c_white..":"..c_grey.." The Main Hall   "..c_white.."(12345)")
    AnsiNote(c_grey..   "  grey   "..c_grey..":     "..c_cyan.." West           "..c_white..":"..c_grey.." The Main Hall   "..c_grey.."(12345)")
    AnsiNote("")
end

function setup_gmcp_color(rcolor)

    if (startswith("blue",rcolor)) then
        c_autocolor = c_blue
    elseif (startswith("red",rcolor)) then
        c_autocolor = c_red
    elseif (startswith("yellow",rcolor)) then
        c_autocolor = c_yellow
    elseif (startswith("cyan",rcolor)) then
        c_autocolor = c_cyan
    elseif (startswith("green",rcolor)) then
        c_autocolor = c_green
    elseif (startswith("white",rcolor)) then
        c_autocolor = c_white
    elseif (startswith("grey",rcolor)) then
        c_autocolor = c_grey
    elseif (startswith("gray",rcolor)) then
        c_autocolor = c_grey
    else
        gmcp_color_help()
        return
    end
    AnsiNote(c_autocolor.."GMCP color set.")

end

function startswith(x,y)
    return string.sub(x,1,string.len(y))==y
end

function print_gmcp_north(rName, rLine, rWildcards, rStyles)
    AnsiNote(stylesToANSI(rStyles) .. c_autocolor.." ("..curr_room.exits.n ..")"..c_grey)
end
function print_gmcp_east(rName, rLine, rWildcards, rStyles)
    AnsiNote(stylesToANSI(rStyles) .. c_autocolor.." ("..curr_room.exits.e ..")"..c_grey)
end
function print_gmcp_south(rName, rLine, rWildcards, rStyles)
    AnsiNote(stylesToANSI(rStyles) .. c_autocolor.." ("..curr_room.exits.s ..")"..c_grey)
end
function print_gmcp_west(rName, rLine, rWildcards, rStyles)
    AnsiNote(stylesToANSI(rStyles) .. c_autocolor.." ("..curr_room.exits.w ..")"..c_grey)
end
function print_gmcp_up(rName, rLine, rWildcards, rStyles)
    AnsiNote(stylesToANSI(rStyles) .. c_autocolor.." ("..curr_room.exits.u ..")"..c_grey)
end
function print_gmcp_down(rName, rLine, rWildcards, rStyles)
    AnsiNote(stylesToANSI(rStyles) .. c_autocolor.." ("..curr_room.exits.d ..")"..c_grey)
end

function show_gmcp_exits()

    if (curr_room == nil or curr_room.exits == nil) then
        AnsiNote("GMCP room data not populated.  Look around, first!")
        Execute("exits")
        return
    end
    if (curr_room.id == -1) then
        AnsiNote("This room is no-map.")
        Execute("exits")
        return
    end

    -- one-shot triggers
    if (curr_room.exits.n ~= "") then
        AddTriggerEx("tempGMCPExits1", "^ North          \\: (.*?)$", "",  
            trigger_flag.Enabled + trigger_flag.OneShot + 
            trigger_flag.RegularExpression + trigger_flag.OmitFromOutput, 
            -1, 0, "", "print_gmcp_north", sendto.script, 100)
    end
    if (curr_room.exits.e ~= "") then
        AddTriggerEx("tempGMCPExits2", "^ East           \\: (.*?)$", "",  
            trigger_flag.Enabled + trigger_flag.OneShot + 
            trigger_flag.RegularExpression + trigger_flag.OmitFromOutput, 
            -1, 0, "", "print_gmcp_east", sendto.script, 100)
    end
    if (curr_room.exits.s ~= "") then
        AddTriggerEx("tempGMCPExits3", "^ South          \\: (.*?)$", "",  
            trigger_flag.Enabled + trigger_flag.OneShot + 
            trigger_flag.RegularExpression + trigger_flag.OmitFromOutput, 
            -1, 0, "", "print_gmcp_south", sendto.script, 100)
    end
    if (curr_room.exits.w ~= "") then
        AddTriggerEx("tempGMCPExits4", "^ West           \\: (.*?)$", "",  
            trigger_flag.Enabled + trigger_flag.OneShot + 
            trigger_flag.RegularExpression + trigger_flag.OmitFromOutput, 
            -1, 0, "", "print_gmcp_west", sendto.script, 100)
    end
    if (curr_room.exits.u ~= "") then
        AddTriggerEx("tempGMCPExits5", "^ Up             \\: (.*?)$", "",  
            trigger_flag.Enabled + trigger_flag.OneShot + 
            trigger_flag.RegularExpression + trigger_flag.OmitFromOutput, 
            -1, 0, "", "print_gmcp_up", sendto.script, 100)
    end
    if (curr_room.exits.d ~= "") then
        AddTriggerEx("tempGMCPExits6", "^ Down           \\: (.*?)$", "",  
            trigger_flag.Enabled + trigger_flag.OneShot + 
            trigger_flag.RegularExpression + trigger_flag.OmitFromOutput, 
            -1, 0, "", "print_gmcp_down", sendto.script, 100)
    end


    Execute("exits")
end


function show_gmcp_room()

    if (curr_room == nil) then
        AnsiNote("No GMCP data found.  Look around, first!")
        return
    end
    AnsiNote(c_white.."--------------------------------------------------------------")
    AnsiNote(c_cyan.."ID:       "..c_grey.. safeprint(curr_room.id))
    AnsiNote(c_cyan.."Name:     "..c_grey.. safeprint(curr_room.name))
    AnsiNote(c_cyan.."Zone:     "..c_grey.. safeprint(curr_room.zone))
    AnsiNote(c_cyan.."Terrain:  "..c_grey.. safeprint(curr_room.terrain))
    local outstr = ""
    outstr = outstr .. c_cyan.."Coord:    X: ".. c_grey.. safeprint(curr_room.x) 
    outstr = outstr .. c_cyan.." Y: ".. c_grey.. safeprint(curr_room.y)
    outstr = outstr .. c_cyan.." Z: ".. c_grey.. curr_room.z
    outstr = outstr .. c_cyan.."  Continent Room: "..c_grey..printintbool(curr_room.iscontinent)
    AnsiNote(outstr)
    AnsiNote(c_white.."--------------------------------------------------------------")

    if (curr_room.exits == nil) then
        AnsiNote("No Exit Data received.")
    else
        AnsiNote(c_cyan.."North:    "..c_grey.. safeprint(curr_room.exits.n))
        AnsiNote(c_cyan.."East:     "..c_grey.. safeprint(curr_room.exits.e))
        AnsiNote(c_cyan.."West:     "..c_grey.. safeprint(curr_room.exits.w))
        AnsiNote(c_cyan.."South:    "..c_grey.. safeprint(curr_room.exits.s))
        AnsiNote(c_cyan.."Up:       "..c_grey.. safeprint(curr_room.exits.u))
        AnsiNote(c_cyan.."Down:     "..c_grey.. safeprint(curr_room.exits.d))
    end
    AnsiNote(c_white.."--------------------------------------------------------------")

end

function safeprint(inval)
   if(inval == nil) then
      return "(nil)"
   end
   if(inval == "") then
      return "---"
   end
   return inval
end

function printintbool(inval)
   if(inval == nil) then
      return "nil"
   end
   if(inval == "1") then
      return "yes"
   end
   return "no"
end


]]>
</script>


<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="Galabans_GMCP_Plugin:help"
   enabled="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[
function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end
]]>
</script> 

</muclient>
